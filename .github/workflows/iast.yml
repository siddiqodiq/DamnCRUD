name: Security Scans

on:
  push:
    branches:
      - main
jobs:
  dast:
    name: DAST
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Create isolated network
        run: docker network create --driver bridge isolated      

      - name: Build AUT
        run: docker build -t my-php-site:latest .

      - name: Run AUT using docker-compose
        run: docker-compose -f docker-compose.app.yaml up -d 

      - name: Get AUT URL
        run: |
          URL=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' my-php-site)
          echo "URL=http://$URL" >> $GITHUB_ENV
  
      - name: Check AUT URL
        run: curl ${{ env.URL }}

      - name: Selenium Preparation
        run: docker run --network=isolated -d -p 4444:4444 -p 7900:7900 -v /dev/shm:/dev/shm --name firefox-standalone selenium/standalone-firefox:latest

      - name: Wait for Selenium Hub
        run: sh wait.sh

      - name: Check the Hub
        run: curl http://localhost:4444/ui

      - name: Install Selenium client
        run: pip install -U selenium

      - name: Fetch active session
        run: python session_fetch.py

      - name: ZAP Scan
        uses: hermanka/action-full-scan@master
        with:
          target: ${{ env.URL }}
          network_name: isolated
          ZAP_AUTH_HEADER: PHPSESSID
          ZAP_AUTH_HEADER_VALUE: $(cat $GITHUB_WORKSPACE/session_file)
          cmd_options: -z "-config api.addrs.addr.url=https://$GITHUB_WORKSPACE/session_file -config ZAP_AUTH_HEADER=PHPSESSID -config ZAP_AUTH_HEADER_VALUE=$(cat $GITHUB_WORKSPACE/session_file)"

      - name: stop docker
        run: docker stop docker-apache

  sast-sonarcloud:
    name: SAST - SonarCloud
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SonarCloud Scanner
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: 416e9c6be94d8bd90b8e878e8cfe609dbcb3d265
        with:
          args: >
            -Dsonar.organization=siddiqodiq
            -Dsonar.projectKey=siddiqodiq_DamnCRUD