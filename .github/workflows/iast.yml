name: IAST
on:
  push:
    branches:
      - main
jobs:
  dast:
    name: DAST
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Update Octokit
        run: npm install -g @octokit/request

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Create isolated network
        run: docker network create --driver bridge isolated

      - name: Build AUT
        run: docker build -t my-php-site:latest .

      - name: Run AUT using docker-compose
        run: docker-compose up -d

      - name: Get AUT URL
        run: |
          URL=http://$(ip -f inet -o addr show docker0 | awk '{print $4}' | cut -d '/' -f 1)
          echo "URL=$URL" >> $GITHUB_ENV
      - name: Check AUT URL
        run: curl ${{ env.URL }}

      - name: Authenticate and Get Session Cookie
        run: |
          curl -c cookies.txt -d "username=admin&password=nimda666!" ${{ env.URL }}/login.php
          SESSION_COOKIE=$(grep PHPSESSID cookies.txt | awk '{print $7}')
          echo "SESSION_COOKIE=$SESSION_COOKIE" >> $GITHUB_ENV

      - name: Echo Session Cookie
        run: |
          echo "Session Cookie: ${{ env.SESSION_COOKIE }}"

      - name: Run ZAP Spider
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: ${{ env.URL }}
          cmd_options: "-z '-config replacer.full_list(0).description=auth
                           -config replacer.full_list(0).enabled=true
                           -config replacer.full_list(0).matchtype=REQ_HEADER
                           -config replacer.full_list(0).matchstr=Cookie
                           -config replacer.full_list(0).replacement=PHPSESSID=${{ env.SESSION_COOKIE }}
                           -config replacer.full_list(0).regex=false
                           -config replacer.full_list(0).initiators=1,2,3,4,6,7'"
        env:
          ZAP_USER: root
        continue-on-error: true
        
      - name: DAST with ZAP SCAN (Enhanced)
        uses: zaproxy/action-full-scan@master
        with:
          target: ${{ env.URL }}
          cmd_options: >
            -z "-config replacer.full_list(0).description=auth
                 -config replacer.full_list(0).enabled=true
                 -config replacer.full_list(0).matchtype=REQ_HEADER
                 -config replacer.full_list(0).matchstr=Cookie
                 -config replacer.full_list(0).replacement=PHPSESSID=${{ env.SESSION_COOKIE }}
                 -config replacer.full_list(0).regex=false
                 -config replacer.full_list(0).initiators=1,2,3,4,6,7
                 -config pscanrules.xss.enable=true
                 -config activeScan.inputVectorTypes=1,2,3
                 -config activeScan.maxScansInUI=5
                 -config activeScan.policy=Default Policy"
        continue-on-error: true

      - name: Stop Docker
        run: docker stop docker-apache

  sast-sonarcloud:
    name: SAST - SonarCloud
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SonarCloud Scanner
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: 416e9c6be94d8bd90b8e878e8cfe609dbcb3d265
        with:
          args: >
            -Dsonar.organization=siddiqodiq
            -Dsonar.projectKey=siddiqodiq_DamnCRUD
